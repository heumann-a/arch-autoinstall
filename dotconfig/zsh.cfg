# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Themes which is shipped with omz
ZSH_THEME="bira"


zstyle ':omz:update' mode auto  # just remind me to update when it's time
zstyle ':omz:update' frequency 14

# SSH-Agent lazy loading
zstyle :omz:plugins:ssh-agent lazy yes

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
COMPLETION_WAITING_DOTS="true"

# BASIC ENVIRONMENTAL VARIABLES 
export EDITOR=nano
export VISUAL=nano

# If $ZSH_CACHE_DIR is already defined
ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump"

# Python Versions and Virtual Environments
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"

plugins=(
  git
  ssh-agent
  zsh-autosuggestions
  zsh-syntax-highlighting
  pyenv
  virtualenv
 )

export VIRTUAL_ENV_DISABLE_PROMPT=1
source $ZSH/oh-my-zsh.sh
export LANG=de_DE.UTF-8
eval "$(atuin init zsh)"

# HomeUser bin dir
PATH="$HOME/.local/bin:$PATH"
PATH="$PATH:$(ruby -e 'print Gem.user_dir')/bin"
# NPM Config
export npm_config_prefix="$HOME/.local"


# NNN CONFIG  ------------------------------------------------------------
export NNN_FIFO=/tmp/nnn.fifo # temporary buffer for preview
export NNN_PLUG='p:preview-tui' 

# SAFTEY ALIASES  ------------------------------------------------------------
alias sudo='sudo '
alias rm='rm --interactive=once --preserve-root=all --one-file-system'
alias cp='cp --interactive'
alias mv='mv --interactive'
alias chown='chown --preserve-root'
alias chgrp='chgrp --preserve-root'
alias chmod='chmod --preserve-root'
alias nnn='n'

# ALIASES & FUNCTIONS ---------------------------------------------------------

n (){
    # For cd on quit
    # Block nesting of nnn in subshells
    [ "${NNNLVL:-0}" -eq 0 ] || {
        echo "nnn is already running"
        return
    }
    # The behaviour is set to cd on quit (nnn checks if NNN_TMPFILE is set)
    # If NNN_TMPFILE is set to a custom path, it must be exported for nnn to
    # see. To cd on quit only on ^G, remove the "export" and make sure not to
    # use a custom path, i.e. set NNN_TMPFILE *exactly* as follows:
    #      NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"
    export NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

    # Unmask ^Q (, ^V etc.) (if required, see `stty -a`) to Quit nnn
    # stty start undef
    # stty stop undef
    # stty lwrap undef
    # stty lnext undef

    # The command builtin allows one to alias nnn to n, if desired, without
    # making an infinitely recursive alias
    command nnn "$@"

    [ ! -f "$NNN_TMPFILE" ] || {
        . "$NNN_TMPFILE"
        rm -f -- "$NNN_TMPFILE" > /dev/null
    }
} 

function cyberchef() {
  podman container exists cyberchef
  if [[ $? -eq 0 ]]
  then # it exists
    if [[ $(podman inspect cyberchef -f '{{.State.Running}}') == "true" ]]
    then 
      echo "Stopping Cyberchef"
      podman stop cyberchef
    else
      echo "Starting Cyberchef on http://localhost:12380"
      podman start cyberchef
      vivaldi http://localhost:12380
    fi
  else
    echo "Creating Container and starting Cyberchef on http://localhost:12380"
    podman run -d -p 12380:80 --name cyberchef ghcr.io/gchq/cyberchef:latest
  fi 
}

function aipaint() {
  pyenv activate py-ai
  iopaint start --model=lama --device=cpu --port=8088 &
  vivaldi http://localhost:8088
  pyenv deactivate py-ai
  fg %+
}

alias ip='ip --color=auto'
alias ls='ls --color=auto'
alias lla='ls -lha' 
alias llr='ls -lhaR' 
alias ping='ping -c 5'
alias hxdc='hexdump -C'
alias xxda='xxd -a'
alias nnn='n'
alias np='n -P p'

# ZSH CUSTOM HOTKEYS ---------------------------------------------------------
bindkey "\e[1;3D" backward-word     # ⌥←
bindkey "\e[1;3C" forward-word      # ⌥→
bindkey "^[[1;9D" beginning-of-line # cmd+←
bindkey "^[[1;9C" end-of-line       # cmd+→
