# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Themes which is shipped with omz
ZSH_THEME="bira"


zstyle ':omz:update' mode auto  # just remind me to update when it's time
zstyle ':omz:update' frequency 14

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
COMPLETION_WAITING_DOTS="true"

# BASIC ENVIRONMENTAL VARIABLES 
export EDITOR=nano
export VISUAL=nano

# If $ZSH_CACHE_DIR is already defined
ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump"

# Python Versions and Virtual Environments
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"

plugins=(
  git
  ssh-agent
  zsh-autosuggestions
  zsh-syntax-highlighting
  pyenv
  virtualenv
 )

export VIRTUAL_ENV_DISABLE_PROMPT=1
source $ZSH/oh-my-zsh.sh
export LANG=de_DE.UTF-8


# HomeUser bin dir
PATH="$HOME/.local/bin:$PATH"
# NPM Config
export npm_config_prefix="$HOME/.local"

# SAFTEY ALIASES  ------------------------------------------------------------
alias sudo='sudo '
alias rm='rm --interactive=once --preserve-root=all --one-file-system'
alias cp='cp --interactive'
alias mv='mv --interactive'
alias chown='chown --preserve-root'
alias chgrp='chgrp --preserve-root'
alias chmod='chmod --preserve-root'

# ALIASES & FUNCTIONS ---------------------------------------------------------

function cyberchef() {
  podman container exists cyberchef
  if [[ $? -eq 0 ]]
  then # it exists
    if [[ $(podman inspect cyberchef -f '{{.State.Running}}') == "true" ]]
    then 
      echo "Stopping Cyberchef"
      podman stop cyberchef
    else
      echo "Starting Cyberchef on http://localhost:12380"
      podman start cyberchef
    fi
  else
    echo "Creating Container and starting Cyberchef on http://localhost:12380"
    podman run -d -p 12380:80 --name cyberchef ghcr.io/gchq/cyberchef:latest
  fi 
}

function fun-ollama() {

 
  case $1 in
    "--help")
      echo "Parameters: obsidian, codegemma, llama3.1"
      ;;
    obsidian)
      echo "Starting Ollama Service for Obsidian"
      OLLAMA_ORIGINS=app://obsidian.md* ollama serve > /dev/null 2>&1 &
      ;;
    "codegemma"|"llama3.1")
      echo "Starting Ollama Service"
      ollama serve > /dev/null 2>&1 &
      ollama run $1
      # podman create -p 127.0.0.1:3000:8080 --network=pasta:-T,11434 --add-host=ollama.local:127.0.0.1 --env 'OLLAMA_BASE_URL=http://ollama.local:11434' --env 'ANONYMIZED_TELEMETRY=False' -v open-webui:/app/backend/data --label io.containers.autoupdate=registry --name open-webui ghcr.io/open-webui/open-webui:main
      ;;
    stop)
        echo "Stopping Ollama Service"
        pkill -f "ollama"
        return 0
        ;;
    *)
      echo "Starting Ollama Service"
      ollama serve > /dev/null 2>&1 &
      ;;
  esac

}

alias ip='ip --color=auto'
alias ls='ls --color=auto'
alias ll='ls -lha' 
alias llr='ls -lhaR' 

alias start-webui='./webui.sh --skip-torch-cuda-test --precision full --no-half'

# ZSH CUSTOM HOTKEYS ---------------------------------------------------------
bindkey "\e[1;3D" backward-word     # ⌥←
bindkey "\e[1;3C" forward-word      # ⌥→
bindkey "^[[1;9D" beginning-of-line # cmd+←
bindkey "^[[1;9C" end-of-line       # cmd+→
